<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="statusStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gwA=
</value>
  </data>
</root>